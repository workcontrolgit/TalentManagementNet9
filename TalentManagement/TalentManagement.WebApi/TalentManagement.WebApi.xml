<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TalentManagement.WebApi</name>
    </assembly>
    <members>
        <member name="M:TalentManagement.WebApi.Controllers.v1.DepartmentsController.Get(TalentManagement.Application.Features.Departments.Queries.GetDepartments.GetDepartmentsQuery)">
            <summary>
            Gets a list of departments based on the specified filter.
            </summary>
            <param name="filter">The filter used to get the list of departments. Supports filtering by Name.</param>
            <returns>A list of departments.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.DepartmentsController.Get(System.Guid)">
            <summary>
            Gets a department by its Id.
            </summary>
            <param name="id">The Id of the department.</param>
            <returns>The department with the specified Id.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.DepartmentsController.Post(TalentManagement.Application.Features.Departments.Commands.CreateDepartment.CreateDepartmentCommand)">
            <summary>
            Creates a new department.
            </summary>
            <param name="command">The command containing the data for the new department.</param>
            <returns>A 201 Created response containing the newly created department.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.DepartmentsController.Paged(TalentManagement.Application.Features.Departments.Queries.GetDepartments.PagedDepartmentsQuery)">
            <summary>
            Retrieves a paged list of departments.
            </summary>
            <param name="query">The query parameters for the paged list.</param>
            <returns>A paged list of departments.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.DepartmentsController.Put(System.Guid,TalentManagement.Application.Features.Departments.Commands.UpdateDepartment.UpdateDepartmentCommand)">
            <summary>
            Updates a department with the given id using the provided command.
            </summary>
            <param name="id">The id of the department to update.</param>
            <param name="command">The command containing the updated information.</param>
            <returns>The updated department.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.DepartmentsController.Delete(System.Guid)">
            <summary>
            Deletes a department by its Id.
            </summary>
            <param name="id">The Id of the department to delete.</param>
            <returns>The result of the deletion.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.DepartmentsController.GetCount(TalentManagement.Application.Features.Departments.Queries.GetDepartments.GetDepartmentsCountQuery)">
            <summary>
            Gets the count of departments based on the specified filter.
            </summary>
            <param name="filter">The filter used to count departments.</param>
            <returns>The number of departments matching the filter.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.EmployeesController.Get(TalentManagement.Application.Features.Employees.Queries.GetEmployees.GetEmployeesQuery)">
            <summary>
            Gets a list of employees based on the specified filter.
            </summary>
            <param name="filter">The filter used to get the list of employees.</param>
            <returns>A list of employees.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.EmployeesController.Get(System.Guid)">
            <summary>
            Gets an employee by its Id.
            </summary>
            <param name="id">The Id of the employee.</param>
            <returns>The employee with the specified Id.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.EmployeesController.Post(TalentManagement.Application.Features.Employees.Commands.CreateEmployee.CreateEmployeeCommand)">
            <summary>
            Creates a new employee.
            </summary>
            <param name="command">The command containing the data for the new employee.</param>
            <returns>A 201 Created response containing the newly created employee.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.EmployeesController.Paged(TalentManagement.Application.Features.Employees.Queries.GetEmployees.PagedEmployeesQuery)">
            <summary>
            Retrieves a paged list of employees.
            Support Ngx-DataTables https://medium.com/scrum-and-coke/angular-11-pagination-of-zillion-rows-45d8533538c0
            </summary>
            <param name="query">The query parameters for the paged list.</param>
            <returns>A paged list of employees.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.EmployeesController.Put(System.Guid,TalentManagement.Application.Features.Employees.Commands.UpdateEmployee.UpdateEmployeeCommand)">
            <summary>
            Updates an employee with the given id using the provided command.
            </summary>
            <param name="id">The id of the employee to update.</param>
            <param name="command">The command containing the updated information.</param>
            <returns>The updated employee.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.EmployeesController.Delete(System.Guid)">
            <summary>
            Deletes an employee by its Id.
            </summary>
            <param name="id">The Id of the employee to delete.</param>
            <returns>The result of the deletion.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.EmployeesController.GetCount(TalentManagement.Application.Features.Employees.Queries.GetEmployees.GetEmployeesCountQuery)">
            <summary>
            Gets the count of employees based on the specified filter.
            </summary>
            <param name="filter">The filter used to count employees.</param>
            <returns>The number of employees matching the filter.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.PositionsController.Get(TalentManagement.Application.Features.Positions.Queries.GetPositions.GetPositionsQuery)">
            <summary>
            Gets a list of positions based on the provided filter.
            </summary>
            <param name="filter">The filter used to query the positions.</param>
            <returns>A list of positions.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.PositionsController.Get(System.Guid)">
            <summary>
            Gets a position by its Id.
            </summary>
            <param name="id">The Id of the position.</param>
            <returns>The position with the specified Id.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.PositionsController.Post(TalentManagement.Application.Features.Positions.Commands.CreatePosition.CreatePositionCommand)">
            <summary>
            Creates a new position.
            </summary>
            <param name="command">The command containing the data for the new position.</param>
            <returns>A 201 Created response containing the newly created position.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.PositionsController.AddMock(TalentManagement.Application.Features.Positions.Commands.CreatePosition.InsertMockPositionCommand)">
            <summary>
            Sends an InsertMockPositionCommand to the mediator.
            </summary>
            <param name="command">The command to be sent.</param>
            <returns>The result of the command.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.PositionsController.Paged(TalentManagement.Application.Features.Positions.Queries.GetPositions.PagedPositionsQuery)">
            <summary>
            Retrieves a paged list of positions.
            </summary>
            <param name="query">The query parameters for the paged list.</param>
            <returns>A paged list of positions.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.PositionsController.Put(System.Guid,TalentManagement.Application.Features.Positions.Commands.UpdatePosition.UpdatePositionCommand)">
            <summary>
            Updates a position with the given id using the provided command.
            </summary>
            <param name="id">The id of the position to update.</param>
            <param name="command">The command containing the updated information.</param>
            <returns>The updated position.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.PositionsController.Delete(System.Guid)">
            <summary>
            Deletes a position by its Id.
            </summary>
            <param name="id">The Id of the position to delete.</param>
            <returns>The result of the deletion.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.PositionsController.GetCount(TalentManagement.Application.Features.Positions.Queries.GetPositions.GetPositionsCountQuery)">
            <summary>
            Gets the count of positions based on the specified filter.
            </summary>
            <param name="filter">The filter used to count positions.</param>
            <returns>The number of positions matching the filter.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.SalaryRangesController.Get(TalentManagement.Application.Features.SalaryRanges.Queries.GetSalaryRanges.GetSalaryRangesQuery)">
            <summary>
            Gets a list of salary ranges based on the specified filter.
            </summary>
            <param name="filter">The filter used to get the list of salary ranges. Supports filtering by Name.</param>
            <returns>A list of salary ranges.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.SalaryRangesController.Get(System.Guid)">
            <summary>
            Gets a salary range by its Id.
            </summary>
            <param name="id">The Id of the salary range.</param>
            <returns>The salary range with the specified Id.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.SalaryRangesController.Post(TalentManagement.Application.Features.SalaryRanges.Commands.CreateSalaryRange.CreateSalaryRangeCommand)">
            <summary>
            Creates a new salary range.
            </summary>
            <param name="command">The command containing the data for the new salary range.</param>
            <returns>A 201 Created response containing the newly created salary range.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.SalaryRangesController.Paged(TalentManagement.Application.Features.SalaryRanges.Queries.GetSalaryRanges.PagedSalaryRangesQuery)">
            <summary>
            Retrieves a paged list of salary ranges.
            </summary>
            <param name="query">The query parameters for the paged list.</param>
            <returns>A paged list of salary ranges.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.SalaryRangesController.Put(System.Guid,TalentManagement.Application.Features.SalaryRanges.Commands.UpdateSalaryRange.UpdateSalaryRangeCommand)">
            <summary>
            Updates a salary range with the given id using the provided command.
            </summary>
            <param name="id">The id of the salary range to update.</param>
            <param name="command">The command containing the updated information.</param>
            <returns>The updated salary range.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.SalaryRangesController.Delete(System.Guid)">
            <summary>
            Deletes a salary range by its Id.
            </summary>
            <param name="id">The Id of the salary range to delete.</param>
            <returns>The result of the deletion.</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.SalaryRangesController.GetCount(TalentManagement.Application.Features.SalaryRanges.Queries.GetSalaryRanges.GetSalaryRangesCountQuery)">
            <summary>
            Gets the count of salary ranges based on the specified filter.
            </summary>
            <param name="filter">The filter used to count salary ranges.</param>
            <returns>The number of salary ranges matching the filter.</returns>
        </member>
        <member name="T:TalentManagement.WebApi.Controllers.v1.USAJobsCodeListController">
            <summary>
            Controller for accessing USAJobs code lists
            </summary>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsCodeListController.GetOccupationalSeries(System.Threading.CancellationToken)">
            <summary>
            Get all occupational series codes
            </summary>
            <returns>List of occupational series</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsCodeListController.SearchOccupationalSeries(System.String,System.Threading.CancellationToken)">
            <summary>
            Search occupational series by keyword
            </summary>
            <param name="keyword">Search keyword</param>
            <returns>Filtered list of occupational series</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsCodeListController.GetOccupationalSeriesByCode(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a specific occupational series by code
            </summary>
            <param name="code">Occupational series code</param>
            <returns>Occupational series item</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsCodeListController.GetPayPlans(System.Threading.CancellationToken)">
            <summary>
            Get all pay plan codes
            </summary>
            <returns>List of pay plans</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsCodeListController.GetHiringPaths(System.Threading.CancellationToken)">
            <summary>
            Get all hiring path codes
            </summary>
            <returns>List of hiring paths</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsCodeListController.GetPositionScheduleTypes(System.Threading.CancellationToken)">
            <summary>
            Get all position schedule type codes
            </summary>
            <returns>List of position schedule types</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsCodeListController.GetSecurityClearances(System.Threading.CancellationToken)">
            <summary>
            Get all security clearance codes
            </summary>
            <returns>List of security clearances</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsCodeListController.GetCountries(System.Threading.CancellationToken)">
            <summary>
            Get all country codes
            </summary>
            <returns>List of countries</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsCodeListController.GetPostalCodes(System.Threading.CancellationToken)">
            <summary>
            Get all postal code (state) codes
            </summary>
            <returns>List of postal codes</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsCodeListController.RefreshCodeLists(System.Threading.CancellationToken)">
            <summary>
            Refresh all code lists from the USAJobs API
            </summary>
            <returns>Success message</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsCodeListController.CheckServiceHealth(System.Threading.CancellationToken)">
            <summary>
            Check if the USAJobs code list service is available
            </summary>
            <returns>Service availability status</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsController.SearchJobs(TalentManagement.Application.DTOs.External.USAJobs.USAJobsSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Search for jobs from USAJobs API
            </summary>
            <param name="request">Search parameters for USAJobs</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>USAJobs search results</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsController.GetJobDetails(System.String,System.Threading.CancellationToken)">
            <summary>
            Get detailed information about a specific USAJobs posting
            </summary>
            <param name="positionId">USAJobs position ID</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Detailed job information from USAJobs</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsController.CheckHealth(System.Threading.CancellationToken)">
            <summary>
            Test connectivity to USAJobs API
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>API connection status</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsController.SearchJobsGet(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Search for USAJobs with GET method for simple integration
            </summary>
            <param name="keyword">Search keyword</param>
            <param name="locationName">Location filter</param>
            <param name="page">Page number</param>
            <param name="resultsPerPage">Results per page</param>
            <param name="sortField">Sort field</param>
            <param name="sortDirection">Sort direction</param>
            <param name="organization">Organization filter</param>
            <param name="payGradeHigh">High pay grade</param>
            <param name="payGradeLow">Low pay grade</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>USAJobs search results</returns>
        </member>
        <member name="M:TalentManagement.WebApi.Controllers.v1.USAJobsController.GetApiInfo">
            <summary>
            Get information about USAJobs API usage and limits
            </summary>
            <returns>API usage information</returns>
        </member>
    </members>
</doc>
